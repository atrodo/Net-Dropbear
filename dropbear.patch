diff -uN a/common-session.c b/common-session.c
--- a/common-session.c	2015-01-28 09:57:36.000000000 -0500
+++ b/common-session.c	2015-08-11 00:09:00.000000000 -0400
@@ -34,6 +34,7 @@
 #include "kex.h"
 #include "channel.h"
 #include "runopts.h"
+#include "libdropbear.h"
 
 static void checktimeouts();
 static long select_timeout();
@@ -509,6 +510,35 @@
 	if (ses.authstate.pw_passwd)
 		m_free(ses.authstate.pw_passwd);
 
+#ifdef ENABLE_LIBDROPBEAR
+	if (hooks.on_username != NULL)
+	{
+	  ses.authstate.pw_uid = getuid();
+	  ses.authstate.pw_gid = getgid();
+
+	  if (hooks.on_username(username) == DROPBEAR_SUCCESS)
+	  {
+	    if (hooks.on_passwd_fill == NULL || hooks.on_passwd_fill(ses.authstate) != DROPBEAR_SUCCESS)
+	    {
+	      ses.authstate.pw_name = m_strdup(username);
+	      ses.authstate.pw_shell = ""; // TODO
+	      ses.authstate.pw_dir = "/tmp"; // TODO
+	    }
+
+            if (hooks.on_shadow_fill == NULL || hooks.on_shadow_fill(&ses.authstate.pw_passwd) != DROPBEAR_SUCCESS)
+            {
+	      ses.authstate.pw_passwd = "!!";
+            }
+            fprintf(stderr, "4 %s\n\n", ses.authstate.pw_passwd);
+
+	    if (   !ses.authstate.pw_dir  || !ses.authstate.pw_shell
+	        || !ses.authstate.pw_name || !ses.authstate.pw_passwd)
+
+	      dropbear_exit("hooks.on_passwd_fill returned invalid data");
+	    return;
+	  }
+	}
+#endif
 	pw = getpwnam(username);
 	if (!pw) {
 		return;
Common subdirectories: a/debian and b/debian
diff -uN a/dropbear.h b/dropbear.h
--- a/dropbear.h	1969-12-31 19:00:00.000000000 -0500
+++ b/dropbear.h	2015-07-06 23:10:45.000000000 -0400
@@ -0,0 +1,16 @@
+
+#ifndef _DROPBEAR_H_
+#define _DROPBEAR_H_
+
+#include "includes.h"
+#include "dbutil.h"
+#include "session.h"
+#include "buffer.h"
+#include "signkey.h"
+#include "runopts.h"
+#include "dbrandom.h"
+#include "crypto_desc.h"
+
+void main_noinetd();
+
+#endif
diff -uN a/dropbear.h.asdf b/dropbear.h.asdf
--- a/dropbear.h.asdf	1969-12-31 19:00:00.000000000 -0500
+++ b/dropbear.h.asdf	2015-06-25 01:01:25.000000000 -0400
@@ -0,0 +1,8 @@
+
+#include "dbutil.h"
+#include "session.h"
+#include "buffer.h"
+#include "signkey.h"
+#include "runopts.h"
+#include "dbrandom.h"
+#include "crypto_desc.h"
diff -uN a/libdropbear.h b/libdropbear.h
--- a/libdropbear.h	1969-12-31 19:00:00.000000000 -0500
+++ b/libdropbear.h	2015-08-10 23:31:30.000000000 -0400
@@ -0,0 +1,25 @@
+#ifndef _LIBDROPBEAR_H_
+#define _LIBDROPBEAR_H_
+
+#include "gensignkey.h"
+
+struct dropbear_hooks {
+  int (*on_username)(const char *username);
+  int (*on_passwd_fill)(struct AuthState auth);
+  int (*on_shadow_fill)(char **crypt_password);
+};
+
+struct dropbear_hooks hooks; /* GLOBAL */
+
+void dropbear_init();
+void dropbear_init_argv(int argc, char ** argv);
+
+void dropbear_add_svr_addr(char* spec);
+void dropbear_add_svr_key(const char *keyfile);
+void dropbear_gen_key(enum signkey_type keytype, int bits, const char* filename);
+
+void dropbear_run();
+
+#define ENABLE_LIBDROPBEAR
+
+#endif /* _LIBDROPBEAR_H_ */
Common subdirectories: a/libtomcrypt and b/libtomcrypt
Common subdirectories: a/libtommath and b/libtommath
diff -uN a/svr-main.c b/svr-main.c
--- a/svr-main.c	2015-01-28 09:57:37.000000000 -0500
+++ b/svr-main.c	2015-08-09 10:23:07.000000000 -0400
@@ -30,6 +30,7 @@
 #include "runopts.h"
 #include "dbrandom.h"
 #include "crypto_desc.h"
+#include "libdropbear.h"
 
 static size_t listensockets(int *sock, size_t sockcount, int *maxfd);
 static void sigchld_handler(int dummy);
@@ -53,7 +54,7 @@
 	_dropbear_exit = svr_dropbear_exit;
 	_dropbear_log = svr_dropbear_log;
 
-	disallow_core();
+	//disallow_core();
 
 	/* get commandline options */
 	svr_getopts(argc, argv);
@@ -104,7 +105,7 @@
 #endif /* INETD_MODE */
 
 #ifdef NON_INETD_MODE
-void main_noinetd() {
+static void main_noinetd() {
 	fd_set fds;
 	unsigned int i, j;
 	int val;
@@ -332,6 +333,46 @@
 }
 #endif /* NON_INETD_MODE */
 
+#ifdef ENABLE_LIBDROPBEAR
+
+void dropbear_init()
+{
+	_dropbear_exit = svr_dropbear_exit;
+	_dropbear_log = svr_dropbear_log;
+
+	//disallow_core();
+
+	/* get commandline options */
+	char * argv[0];
+	svr_getopts(0, argv);
+}
+
+void dropbear_init_argv(int argc, char ** argv)
+{
+	_dropbear_exit = svr_dropbear_exit;
+	_dropbear_log = svr_dropbear_log;
+
+	//disallow_core();
+
+	/* get commandline options */
+	svr_getopts(argc, argv);
+}
+
+void dropbear_gen_key(enum signkey_type keytype, int bits, const char* filename)
+{
+	if (signkey_generate(keytype, bits, filename) == DROPBEAR_FAILURE)
+	{
+		dropbear_exit("Failed to generate key.\n");
+	}
+}
+
+void dropbear_run()
+{
+	main_noinetd();
+	/* notreached */
+}
+
+#endif /* ENABLE_LIBDROPBEAR */
 
 /* catch + reap zombie children */
 static void sigchld_handler(int UNUSED(unused)) {
diff -uN a/svr-runopts.c b/svr-runopts.c
--- a/svr-runopts.c	2015-01-28 09:57:37.000000000 -0500
+++ b/svr-runopts.c	2015-07-28 23:39:35.000000000 -0400
@@ -29,6 +29,7 @@
 #include "dbutil.h"
 #include "algo.h"
 #include "ecdsa.h"
+#include "libdropbear.h"
 
 svr_runopts svr_opts; /* GLOBAL */
 
@@ -337,7 +338,7 @@
 	}
 }
 
-static void addportandaddress(char* spec) {
+void addportandaddress(char* spec) {
 
 	char *myspec = NULL;
 
@@ -543,3 +544,17 @@
 		dropbear_exit("No hostkeys available");
 	}
 }
+
+#ifdef ENABLE_LIBDROPBEAR
+
+void dropbear_add_svr_addr(char* spec)
+{
+	addportandaddress(spec);
+}
+
+void dropbear_add_svr_key(const char *keyfile)
+{
+	addhostkey(keyfile);
+}
+
+#endif
